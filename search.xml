<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>manjaro配置</title>
      <link href="/2021/06/05/manjaro%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/06/05/manjaro%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  从manjaro的U盘启动设置开始，介绍manjaro系统的整个安装、配置过程</p><h1 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h1><p>  在这里顺便介绍一些系统启动、磁盘分区的相关基础知识，最后根据这些知识，完成启动u盘的安装</p><h2 id="系统启动"><a href="#系统启动" class="headerlink" title="系统启动"></a>系统启动</h2><p>  系统启动，本质上是识别并读取存储上的数据信息，并完成操作系统的加载，最后将计算机的控制权转交给操作系统。<br>  因此，系统启动的过程，即首先区分存储(往往是硬盘或U盘)的分区，其次执行启动分区的代码，完成系统分区中的操作系统加载，最后将计算机的控制权转交即可。。<br>  就目前来说，系统启动有两种常用的模式——<strong>Legacy mode</strong>和<strong>UEFI mode</strong></p><h3 id="Legacy-mode-BIOS-MBR"><a href="#Legacy-mode-BIOS-MBR" class="headerlink" title="Legacy mode(BIOS/MBR)"></a>Legacy mode(BIOS/MBR)</h3><p>Legacy mode，即通过MBR/BIOS进行引导的传统模式。BIOS只能识别设备，无法识别分区和文件信息。因此对应的引导的流程如下：</p><ul><li>从ROM执行BIOS代码进行自检</li><li>读取主引导记录(MBR) ：即按照指定的设备顺序，读取设备的第一个扇区<ol><li>如果其最后两个字节为<strong>55AAH</strong>，则读入该扇区，该扇区中包含设备的分区信息。之后将计算机控制权交给该主引导扇区的引导程序即可。</li><li>如果不相等，则继续尝试其他设备</li></ol></li></ul><p>这里借鉴<a href="https://zhuanlan.zhihu.com/p/26098509">知乎前辈的图</a>，给出主引导扇区的格式</p><p><img src="主引导扇区格式.png" alt="主引导扇区格式.png"></p><p>上面的图片很清晰的说明了Legacy mode下区分存储分区的方式，则当读入主引导分区并将计算机控制权交给引导程序后，可以获取分区情况，从而可以继续载入启动分区的代码，最终加载系统分区中的操作系统。这里同样借用<a href="https://zhuanlan.zhihu.com/p/31365115">知乎前辈的图</a>如下所示</p><p><img src="legacy-mode.png" alt="Legacy mode启动过程"></p><h3 id="UEFI-mode-UEFI-GPT"><a href="#UEFI-mode-UEFI-GPT" class="headerlink" title="UEFI mode(UEFI/GPT)"></a>UEFI mode(UEFI/GPT)</h3><p>UEFI mode，实际上是Legacy mode的替代品。与Legacy mode不同的是，UEFI mode不仅可以识别设备，其同时可以识别ROM、分区表和文件系统。因此对应的引导流程如下：</p><ul><li>运行ROM中的Pre-EFI初始化模块进行自检</li><li>加载位于ROM中的DXE<strong>(Driver Execution Environment)</strong><ol><li>枚举并加载位于各个设备ROM中的<strong>设备驱动</strong>，从而可以识别所有的设备信息</li><li>对<strong>磁盘设备</strong>，使用ROM中驱动识别磁盘上的<code>MBR</code>或<code>GPT</code><strong>(GUID Partition Table)</strong>分区表，从而获取磁盘的分区信息</li><li>对于<strong>每个</strong>分区，使用ROM或EFI系统分区中的文件系统驱动，从而完成分区中文件系统的加载。</li></ol></li><li>将计算机控制权交给EFI系统分区的引导程序即可</li></ul><p>实际上<code>MBR</code>和<code>GPT</code>都从磁盘的第一个扇区开始，其中GPT分区表的格式如所示</p><p><img src="gpt分区表格式.png" alt="gpt分区表格式"></p><p>可以看到，如果主板不支持UEFI，则其还是可以通过PMBR结构，实现类似于<strong>Legacy mode</strong>的引导；否则，其通过<strong>Partition Table</strong>，完成分区的识别，从而通过文件系统驱动，获取ESP分区的指定引导程序并完成引导，如下所示</p><p><img src="uefi-mode.png" alt="uefi-mode"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这里再说一下个人的理解——实际上<strong>Legacy mode</strong>和<strong>UEFI mode</strong>本质没有区别，都是加载引导程序，从而去引导操作系统的加载。其区别在于</p><ul><li>ROM中的BIOS无法识别设备上的分区、文件等数据。因此将引导程序放在主引导扇区的固定位置，则BIOS将<strong>计算机的控制权转交给该引导程序</strong>。而引导程序可以通过读取设备的<strong>mbr</strong>分区表，完成操作系统的加载</li><li>ROM中的UEFI有相关的驱动，因此其可以识别分区、文件等数据。因此其通过读取设备的<strong>gpt</strong>分区表，完成操作系统的加载，在此之前<strong>无须转交计算机控制权</strong>。</li></ul><h2 id="制作manjaro启动U盘"><a href="#制作manjaro启动U盘" class="headerlink" title="制作manjaro启动U盘"></a>制作manjaro启动U盘</h2><p>这里我们分别构造适用于<strong>Legacy mode</strong>引导和适用于<strong>UEFI mode</strong>引导的manjaro启动u盘</p><h3 id="适用于Legacy-mode引导"><a href="#适用于Legacy-mode引导" class="headerlink" title="适用于Legacy mode引导"></a>适用于Legacy mode引导</h3><ul><li>首先，按照前面的分析，我们在磁盘上创建MBR分区表，实现磁盘的分区</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo fdisk /dev/sdX<br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): o<br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): n<br>Partition <span class="hljs-built_in">type</span><br>   p   primary (0 primary, 0 extended, 4 free)<br>   e   extended (container <span class="hljs-keyword">for</span> logical partitions)<br>Select (default p): p<br>Partition number (1-4, default 1): <br>First sector (2048-15646719, default 2048): <br>Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (2048-15646719, default 15646719):<br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): a<br>Selected partition 1<br>The bootable flag on partition 1 is enabled now.<br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): w<br><br><br>sudo mkfs.vfat -F32 /dev/sdXn<br></code></pre></td></tr></table></figure><ul><li>接着，向系统分区写入相关的操作系统数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S grub<br><br>sudo mkdir -p /mnt/&#123;iso,usb&#125;<br>sudo mount -o loop manjaro-kde-21.0.5-210519-linux510.iso /mnt/iso<br>sudo mount /dev/sdXn /mnt/usb<br>sudo cp -a /mnt/iso/. /mnt/usb/<br>sudo umount /mnt/*<br></code></pre></td></tr></table></figure><ul><li>最后，将引导程序写入主引导扇区并完成其他设置即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo grub-install --target=i386-pc --boot-directory=/mnt/usb/boot /dev/sdX<br></code></pre></td></tr></table></figure><p>这里由于manjaro镜像中已经有相关的配置文件<strong>boot/grub/grub.cfg</strong>，因此不需要在配置。此时，已经完成适用于<strong>Legacy mode</strong>的启动u盘</p><h3 id="适用于UEFI-mode引导"><a href="#适用于UEFI-mode引导" class="headerlink" title="适用于UEFI mode引导"></a>适用于UEFI mode引导</h3><p>由于<strong>UEFI mode</strong>会替代<strong>Legacy mode</strong>引导模式，因此这里同样给出适用于<strong>UEFI mode</strong>的引导</p><ul><li>首先，我们在磁盘上创建gpt分区表，实现磁盘的分区。这里需要说明的是，<strong>UEFI mode</strong>引导，其会在<strong>EFI分区(EFI system partition)</strong>中查找引导程序，因此一定需要有<strong>EFI分区/ESP</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo fdisk /dev/sdX<br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): g                        <br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): n<br>Partition number (1-128, default 1): <br>First sector (2048-15646686, default 2048): <br>Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (2048-15646686, default 15646686): <br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): t<br>Selected partition 1<br>Partition <span class="hljs-built_in">type</span> or <span class="hljs-built_in">alias</span> (<span class="hljs-built_in">type</span> L to list all): 1<br>Changed <span class="hljs-built_in">type</span> of partition <span class="hljs-string">&#x27;Linux filesystem&#x27;</span> to <span class="hljs-string">&#x27;EFI System&#x27;</span>.<br><br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): w<br><br>sudo mkfs.vfat -F32 /dev/sdXn<br></code></pre></td></tr></table></figure><ul><li>接着，向<strong>EFI分区</strong>中写入操作系统相关数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo mkdir -p /mnt/&#123;iso,usb&#125;<br><br>sudo mount /dev/sdXn /mnt/usb<br>sudo mount -o loop manjaro-kde-21.0.5-210519-linux510.iso /mnt/iso<br>sudo cp -a /mnt/iso/. /mnt/usb<br>sudo umount /mnt/iso<br></code></pre></td></tr></table></figure><ul><li>最后，将引导程序写入<strong>EFI分区</strong>，并完成相关的配置即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo grub-install --removable --no-floppy --target=x86_64-efi --boot-directory=/mnt/usb/boot --efi-directory=/mnt/usb<br><br>sudo umount /mnt/usb<br></code></pre></td></tr></table></figure><p>这里由于manjaro镜像中已经有相关的配置文件<strong>boot/grub/grub.cfg</strong>，因此不需要在配置grub。此时，已经完成适用于<strong>UEFI mode</strong>的启动u盘</p><h1 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h1><h2 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h2><h3 id="系统dpi"><a href="#系统dpi" class="headerlink" title="系统dpi"></a>系统dpi</h3><p>  点击屏幕左下角的<code>application launcher</code>，或者点击<code>Win</code>建，打开<code>System Settings</code>，选择<code>Display Configuration</code>选项，通过设置<strong>Resolution</strong>和<strong>Global scale</strong>完成系统分辨率和DPI的设置<br>  <img src="系统dpi设置.PNG" alt="系统dpi设置"></p><h3 id="字体dpi"><a href="#字体dpi" class="headerlink" title="字体dpi"></a>字体dpi</h3><p>  点击屏幕左下角的<code>application launcher</code>，或者点击<code>Win</code>建，打开<code>System Settings</code>，选择<code>Appearance =&gt; fonts</code>选项，通过设置<strong>General</strong>、<strong>Fixed width</strong>、<strong>Small</strong>、<strong>Toolbar</strong>、<strong>Menu</strong>和<strong>Window title</strong>以及<strong>Force font DPI</strong>，完成系统中字体DPI的设置<br>  <img src="字体dpi设置.PNG" alt="字体dpi设置"></p><h3 id="登录窗口dpi"><a href="#登录窗口dpi" class="headerlink" title="登录窗口dpi"></a>登录窗口dpi</h3><p>  即manajaro登录界面的dpi，这里通过编辑sddm的设置文件——即<code>/etc/sddm.conf</code>完成，添加或修改如下项的值<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs conf">[Wayland]<br>EnableHiDPI=true<br><br>[X11]<br>EnableHiDPI=true<br>ServerArguments=-nolisten tcp -dpi 192<br></code></pre></td></tr></table></figure></p><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p>  在konsole中输入如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman-mirrors -i -c China -m rank<br>sudo pacman -Syy<br></code></pre></td></tr></table></figure><br>  然后从弹出的框中选择一个最好的源即可</p><h2 id="安装yay"><a href="#安装yay" class="headerlink" title="安装yay"></a>安装yay</h2><p>  manjaro除了pacman以外，yay同样是重要的一个软件安装途径，如下进行安装和设置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S yay<br>yay --aururl <span class="hljs-string">&quot;https://aur.tuna.tsinghua.edu.cn&quot;</span> --save<br></code></pre></td></tr></table></figure></p><h2 id="安装vmtools-虚拟机中"><a href="#安装vmtools-虚拟机中" class="headerlink" title="安装vmtools(虚拟机中)"></a>安装vmtools(虚拟机中)</h2><p>  在konsole中输入如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S virtualbox-guest-utils open-vm-tools gtkmm gtkmm3<br>sudo systemctl <span class="hljs-built_in">enable</span> vmtoolsd<br></code></pre></td></tr></table></figure><br>  然后重新启动计算机更新环境即可</p><h2 id="安装输入法"><a href="#安装输入法" class="headerlink" title="安装输入法"></a>安装输入法</h2><h3 id="下载输入法"><a href="#下载输入法" class="headerlink" title="下载输入法"></a>下载输入法</h3><p>在konsole中执行如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S fcitx5-im fcitx5-rime<br></code></pre></td></tr></table></figure></p><p>通过 <strong>~/.pam_environment</strong> 配置环境变量，写入如下内容<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">GTK_IM_MODULE DEFAULT=fcitx<br>QT_IM_MODULE  DEFAULT=fcitx<br>XMODIFIERS    DEFAULT=\@im=fcitx<br></code></pre></td></tr></table></figure><br>  <br>然后重启更新计算机环境</p><h3 id="配置输入法"><a href="#配置输入法" class="headerlink" title="配置输入法"></a>配置输入法</h3><p>  点击右下角菜单栏的键盘托盘图标，点击<code>设置</code>，添加<code>rime</code>输入法<br>  <img src="配置输入法.PNG" alt="配置输入法"><br>  创建 <strong>~/.local/share/fcitx5/rime/luna_pinyin_simp.custom.yaml</strong>，并输入如下内容<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">patch:<br>  switches:<br>    - name: ascii_mode<br>      reset: 1<br>      states: [&quot;中文&quot;, &quot;西文&quot;]<br>    - name: zh_simp<br>      reset: 1<br>      states: [&quot;漢字&quot;, &quot;汉字&quot;]<br></code></pre></td></tr></table></figure></p><p>  然后切换至rime输入法，随便输入相关信息，并输入 <code>ctrl + ~</code>，切换至 <strong>朙月拼音·简化字</strong>输入法。最后，点击右下角菜单栏的键盘托盘图标，选择<code>deploy</code>重新部署rime输入法。<br>  然后重启更新计算机环境。<br>  最后点击右下角菜单栏的键盘托盘图标，点击<code>设置</code>，删除<code>Keyboard-English(US)</code>输入法即可</p><h2 id="设置konsole"><a href="#设置konsole" class="headerlink" title="设置konsole"></a>设置konsole</h2><h3 id="关闭yakuake"><a href="#关闭yakuake" class="headerlink" title="关闭yakuake"></a>关闭yakuake</h3><p>  即点击屏幕左下角的<code>application launcher</code>，或者点击<code>Win</code>建，打开<code>System Settings</code>，选择<code>Workspace =&gt; Startup and Shutdown =&gt; Autostart</code>选项，删除<strong>yakuake</strong>项。<br>  <img src="关闭yakuake.png" alt="关闭yakuake"></p><h3 id="设置快捷键"><a href="#设置快捷键" class="headerlink" title="设置快捷键"></a>设置快捷键</h3><p>  即点击屏幕左下角的<code>application launcher</code>，或者点击<code>Win</code>建，打开<code>System Settings</code>，选择<code>Workspace =&gt; Shortcuts =&gt; Shortcuts</code>选项，点击 <strong>Add Application</strong>选项，添加<code>konsole</code>，并设置相关的快捷键即可。<br>  <img src="设置konsole快捷键.PNG" alt="设置konsole快捷键"></p><h3 id="设置字体"><a href="#设置字体" class="headerlink" title="设置字体"></a>设置字体</h3><p>  打开konsole，在界面上方的<code>Settings =&gt; Edit Current Profile</code>，选择<code>Appearance</code>，在<strong>Font</strong>对应字段进行设置即可<br>  <img src="设置konsole字体.PNG" alt="设置konsole字体"></p><h2 id="设置python"><a href="#设置python" class="headerlink" title="设置python"></a>设置python</h2><h3 id="安装python3"><a href="#安装python3" class="headerlink" title="安装python3"></a>安装python3</h3><p>  系统已经默认安装</p><h3 id="安装pip3"><a href="#安装pip3" class="headerlink" title="安装pip3"></a>安装pip3</h3><p>  系统已经默认安装</p><h3 id="安装python2"><a href="#安装python2" class="headerlink" title="安装python2"></a>安装python2</h3><p>在konsole中执行如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S python2<br></code></pre></td></tr></table></figure></p><h3 id="安装pip2"><a href="#安装pip2" class="headerlink" title="安装pip2"></a>安装pip2</h3><p>在konsole中执行如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S python2-pip<br></code></pre></td></tr></table></figure></p><h3 id="配置pip"><a href="#配置pip" class="headerlink" title="配置pip"></a>配置pip</h3><p>在konsole中执行如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip2 install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U<br>pip2 config <span class="hljs-built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<br><br>pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U<br>pip3 config <span class="hljs-built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure></p><h2 id="设置C-C"><a href="#设置C-C" class="headerlink" title="设置C/C++"></a>设置C/C++</h2><p>在konsole中执行如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S gcc<br></code></pre></td></tr></table></figure></p><h2 id="设置Java"><a href="#设置Java" class="headerlink" title="设置Java"></a>设置Java</h2><p>在konsole中执行如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S jdk11-openjdk<br></code></pre></td></tr></table></figure></p><h2 id="设置Git"><a href="#设置Git" class="headerlink" title="设置Git"></a>设置Git</h2><h3 id="初始化用户信息"><a href="#初始化用户信息" class="headerlink" title="初始化用户信息"></a>初始化用户信息</h3><p>在konsole中执行如下bash命令，其中相关的参数填写个人信息即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;hawk&quot;</span><br>git config --global user.email 18801353760@163.com<br></code></pre></td></tr></table></figure></p><h3 id="导出公、私钥"><a href="#导出公、私钥" class="headerlink" title="导出公、私钥"></a>导出公、私钥</h3><p>首先，如果没有相关的公、私钥，可以参考<a href="https://gitee.com/help/articles/4229">帮助链接</a>，生成自己的公、私钥</p><p>这里将公、私钥进行压缩，并进行加密处理，在konsole中执行如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">git_name=hawk<br>git_email=18801353760@163.com<br>git_passwd=<br><br>tar -zcvf ssh.tar.gz -C ~ --exclude .ssh/known_hosts .ssh/<br><br>K=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;git_passwd&#125;</span><span class="hljs-variable">$&#123;git_name&#125;</span><span class="hljs-variable">$&#123;git_email&#125;</span> | md5sum | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>iv=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;git_passwd&#125;</span><span class="hljs-variable">$&#123;git_name&#125;</span> | md5sum | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>openssl enc -aes-256-cbc -e -<span class="hljs-keyword">in</span> ssh.tar.gz -out ssh.dec -K <span class="hljs-variable">$&#123;K&#125;</span> -iv <span class="hljs-variable">$&#123;iv&#125;</span><br></code></pre></td></tr></table></figure></p><h3 id="导入公、私钥"><a href="#导入公、私钥" class="headerlink" title="导入公、私钥"></a>导入公、私钥</h3><p>即导入上述导出的公、私钥，这里给出我自己的加密后的<a href="ssh.dec">公、私钥</a><br>然后对文件首先进行解密处理，最后解压缩即可，在konsole中执行如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">git_name=hawk<br>git_email=18801353760@163.com<br>git_passwd=<br><br><br>K=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;git_passwd&#125;</span><span class="hljs-variable">$&#123;git_name&#125;</span><span class="hljs-variable">$&#123;git_email&#125;</span> | md5sum | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>iv=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;git_passwd&#125;</span><span class="hljs-variable">$&#123;git_name&#125;</span> | md5sum | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span>)<br>openssl enc -aes-256-cbc -d -<span class="hljs-keyword">in</span> ssh.dec -out ssh.tar.gz -K <span class="hljs-variable">$&#123;K&#125;</span> -iv <span class="hljs-variable">$&#123;iv&#125;</span><br><br>tar -zxvf ssh.tar.gz -C ~/<br>chmod 700 -R ~/.ssh<br></code></pre></td></tr></table></figure></p><h2 id="设置QEMU"><a href="#设置QEMU" class="headerlink" title="设置QEMU"></a>设置QEMU</h2><blockquote><p><strong>qemu</strong>是一个广泛使用的开源计算机模拟器和虚拟机</p></blockquote><p>  因此，这里使用qemu提供manjaro上的虚拟机功能</p><h3 id="安装qemu"><a href="#安装qemu" class="headerlink" title="安装qemu"></a>安装qemu</h3><p>这里安装qemu相关的依赖和功能软件包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S qemu ovmf bridge-utils vde2 dnsmasq ebtables openbsd-netcat<br></code></pre></td></tr></table></figure></p><div class="table-container"><table><thead><tr><th style="text-align:center">软件包</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">ovmf</td><td style="text-align:center">UEFI支持</td></tr><tr><td style="text-align:center">bridge-utils</td><td style="text-align:center">网络桥接支持</td></tr><tr><td style="text-align:center">vde2</td><td style="text-align:center">以太网支持</td></tr><tr><td style="text-align:center">dnsmasq ebtables</td><td style="text-align:center">NAT/DHCP网络</td></tr><tr><td style="text-align:center">openbsd-netcat</td><td style="text-align:center">ssh连接虚拟机支持</td></tr></tbody></table></div><h3 id="安装图形化前端管理"><a href="#安装图形化前端管理" class="headerlink" title="安装图形化前端管理"></a>安装图形化前端管理</h3><p>这里选择<strong>virt-manager</strong>作为管理KVM虚拟机的前端。而virt-manager依赖于libvirt的提供的接口，因此安装virt-manager及其依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S virt-manager virt-viewer libvirt<br></code></pre></td></tr></table></figure></p><p>然后启动libvirtd服务，并将网络设置为自动启动即可<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> libvirtd<br>sudo systemctl start libvirtd<br><br>sudo virsh net-autostart default<br></code></pre></td></tr></table></figure></p><h3 id="配置win10虚拟机"><a href="#配置win10虚拟机" class="headerlink" title="配置win10虚拟机"></a>配置win10虚拟机</h3><h4 id="下载win10ISO文件"><a href="#下载win10ISO文件" class="headerlink" title="下载win10ISO文件"></a>下载win10ISO文件</h4><p>前往<a href="https://next.itellyou.cn/">ITELLYOU</a>，下载官方win10的ISO镜像文件</p><h4 id="下载virtio-win驱动"><a href="#下载virtio-win驱动" class="headerlink" title="下载virtio-win驱动"></a>下载virtio-win驱动</h4><p>为了提高虚拟机性能，虚拟机会使用virtIO技术，而windows客户机需要手动安装该驱动</p><p>首先，点击<a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/stable-virtio/virtio-win.iso">链接</a>下载相关驱动</p><h4 id="启动virt-manager"><a href="#启动virt-manager" class="headerlink" title="启动virt-manager"></a>启动virt-manager</h4><p>执行如下命令启动<strong>virt-manager</strong>管理程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo virt-manager<br></code></pre></td></tr></table></figure></p><p><img src="启动virt-manager.PNG" alt="启动virt-manager"></p><h4 id="新建虚拟机"><a href="#新建虚拟机" class="headerlink" title="新建虚拟机"></a>新建虚拟机</h4><p>在<strong>virt-manager</strong>界面的上方菜单，点击最左侧的<strong>创建新的虚拟机</strong>按钮<br><img src="点击创建新的虚拟机按钮.PNG" alt="点击创建新的虚拟机按钮"></p><p>选择从本地镜像安装，<code>x86_64</code>架构，点击右下角<strong>Forward</strong>下一步<br><img src="选择镜像.PNG" alt="选择镜像界面"></p><p>点击该界面上方的<strong>Browse</strong>界面，选择ISO位置，界面如下所示<br><img src="管理存储池界面.PNG" alt="管理存储池界面"></p><p>这里选择右下角第一个<strong>Browse Local</strong>，选择前面下载的win10的ISO镜像即可<br><img src="选择win10镜像.PNG" alt="选择win10镜像"></p><p>该界面下方取消<strong>自动检测系统</strong>，直接选择windows10系统<br><img src="选择操作系统为win10.PNG" alt="选择操作系统为win10"></p><p>点击右下角的<strong>Forward</strong>下一步，设置内存和CPU信息<br><img src="设置内存和CPU.PNG" alt="设置内存和CPU"></p><p>点击右下角的<strong>Forward</strong>下一步，设置磁盘信息<br><img src="设置虚拟机磁盘.PNG" alt="设置虚拟机磁盘"></p><p>点击右下角的<strong>Forward</strong>下一步，选择在启动前编辑选项<br><img src="在启动前编辑虚拟机.PNG" alt="在启动前编辑虚拟机"></p><p>点击右下角的<strong>Finish</strong>，进入虚拟机的编辑界面，完成相关的编辑<br><img src="虚拟机编辑界面.PNG" alt="虚拟机编辑界面"></p><p>在这里添加另一个CDROM设置，其文件是前面下载的Virtio驱动文件，如下所示<br><img src="添加Virtio驱动CDROM.PNG" alt="添加Virtio驱动CDROM"></p><p>完成编辑后，点击右上角的<strong>Begin Installation</strong>，完成虚拟机的安装</p><p>这里特别说明的是，当进行到<strong>你想将Windows安装在哪里</strong>时，其无法显示磁盘信息，如下所示<br><img src="未加载Virtio驱动程序.PNG" alt="未加载Virtio驱动程序"></p><p>点击左下角<strong>加载驱动程序</strong>，选择相关的驱动程序安装即可<br><img src="安装Virtio驱动程序.PNG" alt="安装Virtio驱动程序"></p><h4 id="配置VirtIO-guest-tools"><a href="#配置VirtIO-guest-tools" class="headerlink" title="配置VirtIO guest tools"></a>配置VirtIO guest tools</h4><p>为了启用主机和虚拟机之间的剪切板共享，需要在虚拟机中安装VirtIO guest tools，点击<a href="https://www.spice-space.org/download/binaries/spice-guest-tools/">https://www.spice-space.org/download/binaries/spice-guest-tools/</a>下载安装即可</p><h2 id="设置SSR代理"><a href="#设置SSR代理" class="headerlink" title="设置SSR代理"></a>设置SSR代理</h2><p>这里通过安装V2RAY代理，并通过其SSR插件实现SSR代理</p><h3 id="下载v2ray代理"><a href="#下载v2ray代理" class="headerlink" title="下载v2ray代理"></a>下载v2ray代理</h3><p>执行下列命令安装<strong>v2ray</strong>代理软件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yay -S v2ray<br></code></pre></td></tr></table></figure></p><h3 id="设置qv2ray代理"><a href="#设置qv2ray代理" class="headerlink" title="设置qv2ray代理"></a>设置qv2ray代理</h3><p>为了操作方便，下载<strong>qv2ray</strong>，点击<a href="https://github.com/Qv2ray/Qv2ray/releases">https://github.com/Qv2ray/Qv2ray/releases</a>链接进行下载</p><p>执行如下命令完成安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkdir ~/qv2ray<br>sudo chmod +x $(ls | grep <span class="hljs-string">&quot;Qv2ray&quot;</span>)<br></code></pre></td></tr></table></figure></p><p>之后执行<code>./$(ls | grep &quot;Qv2ray&quot;)</code>，将最终集合的路径指定为前面新建的路径即可，出现如下相关的界面<br><img src="qv2ray初始界面.PNG" alt="qv2ray初始界面"></p><p>首先点击该界面左上角第二个<strong>Plugins</strong>按钮，使程序生成对应的插件目录<br>然后点击右上角第一个<strong>Preferencees</strong>按钮，设置语言信息、连接信息、V2RAY核心可执行文件路径和V2RAY资源目录即可，如下所示<br><img src="qv2ray常规设置.PNG" alt="qv2ray常规设置"></p><p><img src="qv2ray中v2ray相关设置.PNG" alt="qv2ray中v2ray相关设置"></p><p>之后可以通过点击屏幕左下角的<code>application launcher</code>，或者点击<code>Win</code>建，快速启动<strong>qv2ray</strong>，也可以将其拖拽到下方菜单栏，从而快速启动<br><img src="qv2ray启动.PNG" alt="qv2ray启动"></p><h3 id="配置qv2ray插件"><a href="#配置qv2ray插件" class="headerlink" title="配置qv2ray插件"></a>配置qv2ray插件</h3><p>下载<strong>qv2ray的ssr插件</strong>，点击<a href="https://github.com/Qv2ray/QvPlugin-SSR/releases">https://github.com/Qv2ray/QvPlugin-SSR/releases</a>链接进行下载</p><p>执行如下命令，完成插件的安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mv $(ls | grep <span class="hljs-string">&quot;QvPlugin&quot;</span>) ~/.config/qv2ray/plugins<br></code></pre></td></tr></table></figure></p><h3 id="订阅节点"><a href="#订阅节点" class="headerlink" title="订阅节点"></a>订阅节点</h3><p>打开<strong>qv2ray</strong>代理<br><img src="qv2ray初始界面.PNG" alt="qv2ray初始界面"></p><p>然后点击该界面左上角的<strong>分组</strong>按钮，编辑分组信息<br><img src="qv2ray编辑分组信息.PNG" alt="qv2ray编辑分组信息"></p><p>最后在该界面右侧，输入相关的订阅地址，即可完成节点的订阅</p><h3 id="配置proxychains"><a href="#配置proxychains" class="headerlink" title="配置proxychains"></a>配置proxychains</h3><p>大部分时候，打开<strong>qv2ray</strong>，可以实现数据走系统代理<br>但是部分命令行的数据并不走系统代理，因此需要通过<strong>proxychains</strong>完成相关的代理</p><p>首先执行如下命令完成代理<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -S proxychians<br></code></pre></td></tr></table></figure></p><p>接着，需要修改全局代理链，将<strong>/etc/proxychains.conf</strong>文件的代理修改如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[ProxyList]<br>socks5  127.0.0.1 1089<br></code></pre></td></tr></table></figure></p><p>上述端口为<strong>qv2ray</strong>中监听的端口即可<br>之后，通过<code>proxychains -q [待执行命令]</code>，完成代理</p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><h2 id="Failed-to-start-Load-Save-Screen-Backlight-Brightness-of-backlight-acpi-video0"><a href="#Failed-to-start-Load-Save-Screen-Backlight-Brightness-of-backlight-acpi-video0" class="headerlink" title="Failed to start Load/Save Screen Backlight Brightness of backlight:acpi_video0"></a>Failed to start Load/Save Screen Backlight Brightness of backlight:acpi_video0</h2><p>  这里实际上系统使用了两种服务保存并载入背光设置，一个为<code>systemd-backlight@backlight:acpi_video0</code>；另一个为<code>systemd-backlight@backlight:amdgpu_b10</code>。对于AMD集显来说，第一个出错，会使用第二种设置，则直接mask掉第一个服务即可，在konsole中执行如下bash命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl mask systemd-backlight@backlight:acpi_video0<br></code></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 设置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设置 </tag>
            
            <tag> 系统启动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Butterfly主题的hexo静态博客</title>
      <link href="/2021/05/24/%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%BD%AE/"/>
      <url>/2021/05/24/%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  基于hexo的静态博客一般分为两部分——静态博客的前端资源，和生成这些资源的设置信息。这里为了管理方便，将这两部分放置在仓库管理的一个仓库的两个分支中。从而可以在任意主机上，通过拉取设置信息所在分支数据，构建编写博客的环境；而将编写好的博客推送到静态博客的前端资源所在的分支中，完成博客的更新。这样子，我们可以在任何主机上，快速同步之前的博客编写环境，并快速更新博客。</p><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>  我们需要通过git与仓库管理网站进行交互，点此<a href="https://mirrors.tuna.tsinghua.edu.cn/github-release/git-for-windows/git/">镜像链接</a>，进行下载并安装。</p><p>  我们需要简单配置git，使用如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name `user name`<br>git config --global user.email `user email`<br></code></pre></td></tr></table></figure><p>  这里可以通过<a href="https://gitee.com/help/articles/4229#article-header0">教程链接</a>，完成相关git的配置</p><h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><p>  Hexo是基于Node.js，因此我们需要安装和配置。首先点此<a href="http://nodejs.cn/download/">下载链接</a>，下载并安装Node.js。<br>  为了提高安装的效率，我们更换其按镜像源，使用如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> registry <span class="hljs-string">&quot;https://registry.npm.taobao.org&quot;</span><br>npm config <span class="hljs-built_in">set</span> sass_binary_site=https://npm.taobao.org/mirrors/node-sass/<br>npm config <span class="hljs-built_in">set</span> phantomjs_cdnurl=https://npm.taobao.org/mirrors/phantomjs/<br>npm config <span class="hljs-built_in">set</span> electron_mirror=https://npm.taobao.org/mirrors/electron/<br></code></pre></td></tr></table></figure><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>  根据<a href="https://hexo.io/zh-cn/docs/">Hexo官网</a>进行相关的安装。<br>  执行如下命令，完成Hexo的安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><h1 id="搭建博客生成环境"><a href="#搭建博客生成环境" class="headerlink" title="搭建博客生成环境"></a>搭建博客生成环境</h1><p>  这里完成最终生成静态博客相关的前端资源的环境。相关的设置信息会被推送到仓库的<strong>develop</strong>分支，以方便在任何主机上同步该环境。</p><h2 id="初始化工作目录"><a href="#初始化工作目录" class="headerlink" title="初始化工作目录"></a>初始化工作目录</h2><p>  首先选定一个路径，在该路径下初始化工作目录，不妨记为<strong>working_dir</strong>，作为该环境的工作目录，命令如下所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo.cmd init `working_dir`<br></code></pre></td></tr></table></figure><p>  前面已经介绍，这些设置会被同步到仓库中，因此这里完成仓库初始化，执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init<br></code></pre></td></tr></table></figure><p>  这里需要通过编辑<strong>working_dir/.gitignore</strong>文件，添加该工作目录中那些文件作为无关文件，不会被同步到仓库相关分支中，这里首先填写一部分，内容如下所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs .gitignore">DS_Store<br>Thumbs.db<br>db.json<br>*.log<br>node_modules/<br>public/<br>.deploy*/<br>*-lock.json<br></code></pre></td></tr></table></figure><h2 id="设置博客配置"><a href="#设置博客配置" class="headerlink" title="设置博客配置"></a>设置博客配置</h2><p>  这里通过修改<strong>working_dir/_config.yml</strong>，完成博客的主要配置信息的设置，通过<a href="https://hexo.io/zh-cn/docs/configuration">该链接</a>查找大部分配置的可选参数和含义。</p><h3 id="修改网站信息"><a href="#修改网站信息" class="headerlink" title="修改网站信息"></a>修改网站信息</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Site</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">&quot;Jiawei Hawk&#x27;s blog&quot;</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">&quot;blog&quot;</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">&quot;This is Jiawei Hawk&#x27;s blog&quot;</span><br><span class="hljs-attr">keywords:</span> <span class="hljs-string">&quot;Jiawei Hawk&quot;</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">&quot;Jiawei Hawk&quot;</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">&quot;zh-CN&quot;</span><br><span class="hljs-attr">timezone:</span> <span class="hljs-string">&quot;Asia/Shanghai&quot;</span><br></code></pre></td></tr></table></figure><p>  这里分别设置了网站名称、网站子名称、网站描述、网站关键词、作者、网站语言和时间区域</p><h3 id="修改网页URL信息"><a href="#修改网页URL信息" class="headerlink" title="修改网页URL信息"></a>修改网页URL信息</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">https://jiaweihawk.github.io</span><br><span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span><br><span class="hljs-attr">permalink_defaults:</span><br><span class="hljs-attr">pretty_urls:</span><br>  <span class="hljs-attr">trailing_index:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br>  <span class="hljs-attr">trailing_html:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></code></pre></td></tr></table></figure><p>  这里分别为网站url，网页的永久链接形式等</p><h3 id="修改博客前端资源目录位置"><a href="#修改博客前端资源目录位置" class="headerlink" title="修改博客前端资源目录位置"></a>修改博客前端资源目录位置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Directory</span><br><span class="hljs-attr">source_dir:</span> <span class="hljs-string">source</span><br><span class="hljs-attr">public_dir:</span> <span class="hljs-string">public</span><br><span class="hljs-attr">tag_dir:</span> <span class="hljs-string">tags</span><br><span class="hljs-attr">archive_dir:</span> <span class="hljs-string">archives</span><br><span class="hljs-attr">category_dir:</span> <span class="hljs-string">categories</span><br><span class="hljs-attr">code_dir:</span> <span class="hljs-string">downloads/code</span><br><span class="hljs-attr">i18n_dir:</span> <span class="hljs-string">:lang</span><br><span class="hljs-attr">skip_render:</span><br></code></pre></td></tr></table></figure><p>  这里指定博客的资源最终的位置。前面已经说过，该仓库将博客前端资源和配置博客环境的设置分别进行存储，而这里博客前端资源最终会生成在<strong>public_dir</strong>对应的路径。因此我们通过在<strong>working_dir/.gitignore</strong>中添加该路径，避免最终同步设置时将生成的博客前端资源一并进行同步，<strong>working_dir/.gitignore</strong>中默认已经添加该路径。如果设置变化了，需要进行相关的更新。</p><h2 id="设置博客主题"><a href="#设置博客主题" class="headerlink" title="设置博客主题"></a>设置博客主题</h2><p>  如果对于博客默认的主题不是很喜欢，可以按照<a href="https://hexo.io/zh-cn/docs/themes">官网教程</a>，方便的更换博客主题</p><h3 id="下载博客主题"><a href="#下载博客主题" class="headerlink" title="下载博客主题"></a>下载博客主题</h3><p>  这里选择Butterfly主题，其也有<a href="https://butterfly.js.org/">官方教程</a>可以进行查看，这里给出本博客的设置。<br>  在<strong>working_dir</strong>工作目录下，执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly<br></code></pre></td></tr></table></figure><p>  这里由于我们会对主题进行相关的设置更改，因此需要避免嵌套git项目，即删除<strong>working_dir/themes/butterfly/.git</strong>文件即可</p><h3 id="指定博客主题"><a href="#指定博客主题" class="headerlink" title="指定博客主题"></a>指定博客主题</h3><p>  由于Butterfly主题依赖一些第三方插件，因此需要在<strong>working_dir</strong>工作目录下执行命令安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-renderer-pug hexo-renderer-stylus --save<br></code></pre></td></tr></table></figure><p>  修改<strong>working_dir/_config.yml</strong>中的<strong>theme</strong>设置的值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">butterfly</span><br></code></pre></td></tr></table></figure><p>  此时，已经完成了Butterfly主题的使用</p><h3 id="修改博客主题细节"><a href="#修改博客主题细节" class="headerlink" title="修改博客主题细节"></a>修改博客主题细节</h3><p>  类似于前面博客的设置更改，可以通过修改<strong>working_dir/themes/butterfly/_config.yml</strong>文件，完成博客主题的主要配置信息的设置</p><h4 id="设置菜单栏"><a href="#设置菜单栏" class="headerlink" title="设置菜单栏"></a>设置菜单栏</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-string">主页:</span> <span class="hljs-string">/</span> <span class="hljs-string">||</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-home</span><br>  <span class="hljs-string">归档:</span> <span class="hljs-string">/archives/</span> <span class="hljs-string">||</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-archive</span><br>  <span class="hljs-string">标签:</span> <span class="hljs-string">/tags/</span> <span class="hljs-string">||</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-tags</span><br>  <span class="hljs-string">分类:</span> <span class="hljs-string">/categories/</span> <span class="hljs-string">||</span> <span class="hljs-string">fas</span> <span class="hljs-string">fa-folder-open</span><br>  <span class="hljs-comment"># List||fas fa-list:</span><br>  <span class="hljs-comment">#   Music: /music/ || fas fa-music</span><br>  <span class="hljs-comment">#   Movie: /movies/ || fas fa-video</span><br>  <span class="hljs-comment"># Link: /link/ || fas fa-link</span><br>  <span class="hljs-comment"># About: /about/ || fas fa-heart</span><br></code></pre></td></tr></table></figure><p>  这里通过取消注释，选择菜单栏显示相关的菜单。这里可以参考<a href="https://xiabor.com/4215.html#%E8%8F%9C%E5%8D%95%E6%A0%8F%E8%AE%BE%E7%BD%AE">这位大佬的博客</a>，进行更多的外链的设置显示</p><p>  该菜单栏引入了主页、归档、标签和分类。其中标签页和分类页需要手动创建，否则会显示无法打开。<br>  首先在<strong>working_dir</strong>工作目录下，执行如下命令创建标签页</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page tags<br></code></pre></td></tr></table></figure><p>  然后修改<strong>working_dir/source/tags/index.md</strong>文件的type字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs index.md">---<br>title: &quot;标签&quot;<br>date: 2021-05-26 22:04:20<br>type: &quot;tags&quot;<br>---<br></code></pre></td></tr></table></figure><p>  类似的，在<strong>working_dir</strong>工作目录下，执行如下命令创建分类页</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo.cmd new page categories<br></code></pre></td></tr></table></figure><p>  然后同样修改<strong>working_dir/source/categories/index.md</strong>文件的type字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs index.md">---<br>title: &quot;分类&quot;<br>date: 2021-05-26 22:06:23<br>type: &quot;categories&quot;<br>---<br></code></pre></td></tr></table></figure><h4 id="设置博客背景图片"><a href="#设置博客背景图片" class="headerlink" title="设置博客背景图片"></a>设置博客背景图片</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># The banner image of home page</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">https://picture.zwc365.com/getbing.jpg</span><br><br><span class="hljs-comment"># If the banner of page not setting, it will show the top_img</span><br><span class="hljs-attr">default_top_img:</span> <span class="hljs-string">/img/background.jpg</span><br></code></pre></td></tr></table></figure><p>  这里修改了主页的默认背景图片，其中<code>index_img</code>为主页背景图片的外链；对于<code>default_top_img</code>，其使用本地的图片作为默认的顶部背景图片，该图片的地址为<strong>working_dir/themes/butterfly\source/img/background.jpg</strong></p><h4 id="设置主页描述"><a href="#设置主页描述" class="headerlink" title="设置主页描述"></a>设置主页描述</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Display the article introduction on homepage</span><br><span class="hljs-comment"># 1: description</span><br><span class="hljs-comment"># 2: both (if the description exists, it will show description, or show the auto_excerpt)</span><br><span class="hljs-comment"># 3: auto_excerpt (default)</span><br><span class="hljs-comment"># false: do not show the article introduction</span><br><span class="hljs-attr">index_post_content:</span><br>  <span class="hljs-attr">method:</span> <span class="hljs-number">2</span><br>  <span class="hljs-attr">length:</span> <span class="hljs-number">500</span> <span class="hljs-comment"># if you set method to 2 or 3, the length need to config</span><br></code></pre></td></tr></table></figure><p>  即这里根据注释说明，选择模式2，从而在浏览每一篇博客缩略界面时，展示相关信息。</p><ul><li>设置代码显示</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># Code Blocks (代碼相關)<br># --------------------------------------<br><br>highlight_theme: mac #  darker / pale night / light / ocean / mac / mac light / false<br>highlight_copy: true # copy button<br>highlight_lang: true # show the code language<br>highlight_shrink: false # true: shrink the code blocks / false: expand the code blocks | none: expand code blocks and hide the button<br>highlight_height_limit: false # unit: px<br>code_word_wrap: false<br></code></pre></td></tr></table></figure><p>  这里将代码主题设置为mac主题，其余皆为默认设置，使代码更加美观</p><h4 id="设置文章meta显示"><a href="#设置文章meta显示" class="headerlink" title="设置文章meta显示"></a>设置文章meta显示</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_meta:</span><br>  <span class="hljs-attr">page:</span> <span class="hljs-comment"># Home Page</span><br>    <span class="hljs-attr">date_type:</span> <span class="hljs-string">created</span> <span class="hljs-comment"># created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span><br>    <span class="hljs-attr">date_format:</span> <span class="hljs-string">date</span> <span class="hljs-comment"># date/relative 顯示日期還是相對日期</span><br>    <span class="hljs-attr">categories:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># true or false 主頁是否顯示分類</span><br>    <span class="hljs-attr">tags:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># true or false 主頁是否顯示標籤</span><br>    <span class="hljs-attr">label:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># true or false 顯示描述性文字</span><br>  <span class="hljs-attr">post:</span><br>    <span class="hljs-attr">date_type:</span> <span class="hljs-string">both</span> <span class="hljs-comment"># created or updated or both 文章頁日期是創建日或者更新日或都顯示</span><br>    <span class="hljs-attr">date_format:</span> <span class="hljs-string">date</span> <span class="hljs-comment"># date/relative 顯示日期還是相對日期</span><br>    <span class="hljs-attr">categories:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># true or false 文章頁是否顯示分類</span><br>    <span class="hljs-attr">tags:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># true or false 文章頁是否顯示標籤</span><br>    <span class="hljs-attr">label:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># true or false 顯示描述性文字</span><br></code></pre></td></tr></table></figure><p>  这里设置主页中文件显示标签信息，更方便获取文章信息</p><h4 id="设置文章版权"><a href="#设置文章版权" class="headerlink" title="设置文章版权"></a>设置文章版权</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_copyright:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">decode:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">license:</span> <span class="hljs-string">CC</span> <span class="hljs-string">BY-NC-SA</span> <span class="hljs-number">4.0</span><br>  <span class="hljs-attr">license_url:</span> <span class="hljs-string">https://creativecommons.org/licenses/by-nc-sa/4.0/</span><br></code></pre></td></tr></table></figure><p>  这里对于文章版权和许可协议，将其网址解码功能打开，从而正常显示中文网站</p><h4 id="设置文章锚点"><a href="#设置文章锚点" class="headerlink" title="设置文章锚点"></a>设置文章锚点</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># anchor</span><br><span class="hljs-comment"># when you scroll in post, the URL will update according to header id.</span><br><span class="hljs-attr">anchor:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>  即开启文章锚点功能，从而每次翻动文章时，其URL都会进行相应的更改，其会在网页中留下历史记录。</p><h4 id="设置文章分页按钮"><a href="#设置文章分页按钮" class="headerlink" title="设置文章分页按钮"></a>设置文章分页按钮</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"># post_pagination (分頁)<br># value: 1 || 2 || false<br># 1: The &#x27;next post&#x27; will link to old post<br># 2: The &#x27;next post&#x27; will link to new post<br># false: disable pagination<br>post_pagination: 2<br></code></pre></td></tr></table></figure><p>  通过开启文章分页按钮，并设置为模式2，文章结束处会显示上一篇和下一篇文章的跳转信息</p><h4 id="设置账户头像"><a href="#设置账户头像" class="headerlink" title="设置账户头像"></a>设置账户头像</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Avatar (頭像)</span><br><span class="hljs-attr">avatar:</span><br>  <span class="hljs-attr">img:</span> <span class="hljs-string">/img/profile.jpg</span><br>  <span class="hljs-attr">effect:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>  这里通过设置img的路径信息即可。这里的根目录为<strong>working_dir/themes/butterfly/source</strong>，将头像放置在该位置即可。</p><h4 id="设置博客Footer"><a href="#设置博客Footer" class="headerlink" title="设置博客Footer"></a>设置博客Footer</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Footer Settings</span><br><span class="hljs-comment"># --------------------------------------</span><br><span class="hljs-attr">footer:</span><br>  <span class="hljs-attr">owner:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">since:</span> <span class="hljs-number">2021</span><br>  <span class="hljs-attr">custom_text:</span> <span class="hljs-string">&quot;Come to pwn me!!&quot;</span><br>  <span class="hljs-attr">copyright:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># Copyright of theme and framework</span><br></code></pre></td></tr></table></figure><p>  这里设置了博客角标的显示信息，关闭了copyright内容，并加入了自己的自定义信息</p><h4 id="右下角按钮"><a href="#右下角按钮" class="headerlink" title="右下角按钮"></a>右下角按钮</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Change font size</span><br><span class="hljs-attr">change_font_size:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># Conversion between Traditional and Simplified Chinese (簡繁轉換)</span><br><span class="hljs-attr">translate:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-comment"># The text of a button</span><br>  <span class="hljs-attr">default:</span> <span class="hljs-string">繁</span><br>  <span class="hljs-comment"># the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）</span><br>  <span class="hljs-attr">defaultEncoding:</span> <span class="hljs-number">2</span><br>  <span class="hljs-comment"># Time delay</span><br>  <span class="hljs-attr">translateDelay:</span> <span class="hljs-number">0</span><br>  <span class="hljs-comment"># The text of the button when the language is Simplified Chinese</span><br>  <span class="hljs-attr">msgToTraditionalChinese:</span> <span class="hljs-string">&#x27;繁&#x27;</span><br>  <span class="hljs-comment"># The text of the button when the language is Traditional Chinese</span><br>  <span class="hljs-attr">msgToSimplifiedChinese:</span> <span class="hljs-string">&#x27;簡&#x27;</span><br><br><span class="hljs-comment"># Read Mode (閲讀模式)</span><br><span class="hljs-attr">readmode:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># dark mode</span><br><span class="hljs-attr">darkmode:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># Toggle Button to switch dark/light mode</span><br>  <span class="hljs-attr">button:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-comment"># Switch dark/light mode automatically (自動切換 dark mode和 light mode)</span><br>  <span class="hljs-comment"># autoChangeMode: 1  Following System Settings, if the system doesn&#x27;t support dark mode, it will switch dark mode between 6 pm to 6 am</span><br>  <span class="hljs-comment"># autoChangeMode: 2  Switch dark mode between 6 pm to 6 am</span><br>  <span class="hljs-comment"># autoChangeMode: false</span><br>  <span class="hljs-attr">autoChangeMode:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># Lightbox (圖片大圖查看模式)</span><br><span class="hljs-comment"># --------------------------------------</span><br><span class="hljs-comment"># You can only choose one, or neither (只能選擇一個 或者 兩個都不選)</span><br><br><span class="hljs-comment"># medium-zoom</span><br><span class="hljs-comment"># https://github.com/francoischalifour/medium-zoom</span><br><span class="hljs-attr">medium_zoom:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># fancybox</span><br><span class="hljs-comment"># http://fancyapps.com/fancybox/3/</span><br><span class="hljs-attr">fancybox:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>  这里关闭了简繁转换、阅读模式和夜间模式等按钮</p><h4 id="设置侧边栏"><a href="#设置侧边栏" class="headerlink" title="设置侧边栏"></a>设置侧边栏</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># aside (側邊欄)</span><br><span class="hljs-comment"># --------------------------------------</span><br><br><span class="hljs-attr">aside:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">hide:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">button:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">mobile:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># display on mobile</span><br>  <span class="hljs-attr">position:</span> <span class="hljs-string">right</span> <span class="hljs-comment"># left or right</span><br>  <span class="hljs-attr">card_author:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">description:</span> <span class="hljs-string">&quot;coder &amp;&amp; ctfer&quot;</span><br>    <span class="hljs-attr">button:</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">icon:</span> <span class="hljs-string">fab</span> <span class="hljs-string">fa-github</span><br>      <span class="hljs-attr">text:</span> <span class="hljs-string">Follow</span> <span class="hljs-string">Me</span><br>      <span class="hljs-attr">link:</span> <span class="hljs-string">https://github.com/JiaweiHawk</span><br>  <span class="hljs-attr">card_announcement:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">content:</span> <span class="hljs-string">&quot;This is hawk&#x27;s blog&quot;</span><br>  <span class="hljs-attr">card_recent_post:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">limit:</span> <span class="hljs-number">5</span> <span class="hljs-comment"># if set 0 will show all</span><br>    <span class="hljs-attr">sort:</span> <span class="hljs-string">date</span> <span class="hljs-comment"># date or updated</span><br>    <span class="hljs-attr">sort_order:</span> <span class="hljs-comment"># Don&#x27;t modify the setting unless you know how it works</span><br>  <span class="hljs-attr">card_categories:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">limit:</span> <span class="hljs-number">8</span> <span class="hljs-comment"># if set 0 will show all</span><br>    <span class="hljs-attr">expand:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># none/true/false</span><br>    <span class="hljs-attr">sort_order:</span> <span class="hljs-comment"># Don&#x27;t modify the setting unless you know how it works</span><br>  <span class="hljs-attr">card_tags:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">limit:</span> <span class="hljs-number">40</span> <span class="hljs-comment"># if set 0 will show all</span><br>    <span class="hljs-attr">color:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">sort_order:</span> <span class="hljs-comment"># Don&#x27;t modify the setting unless you know how it works</span><br>  <span class="hljs-attr">card_archives:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">monthly</span> <span class="hljs-comment"># yearly or monthly</span><br>    <span class="hljs-attr">format:</span> <span class="hljs-string">MMMM</span> <span class="hljs-string">YYYY</span> <span class="hljs-comment"># eg: YYYY年MM月</span><br>    <span class="hljs-attr">order:</span> <span class="hljs-number">-1</span> <span class="hljs-comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span><br>    <span class="hljs-attr">limit:</span> <span class="hljs-number">8</span> <span class="hljs-comment"># if set 0 will show all</span><br>    <span class="hljs-attr">sort_order:</span> <span class="hljs-comment"># Don&#x27;t modify the setting unless you know how it works</span><br>  <span class="hljs-attr">card_webinfo:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">post_count:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">last_push_date:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">sort_order:</span> <span class="hljs-comment"># Don&#x27;t modify the setting unless you know how it works</span><br><br><span class="hljs-comment"># busuanzi count for PV / UV in site</span><br><span class="hljs-comment"># 訪問人數</span><br><span class="hljs-attr">busuanzi:</span><br>  <span class="hljs-attr">site_uv:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">site_pv:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">page_pv:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># Time difference between publish date and now (網頁運行時間)</span><br><span class="hljs-comment"># Formal: Month/Day/Year Time or Year/Month/Day Time</span><br><span class="hljs-attr">runtimeshow:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">publish_date:</span><br><br><span class="hljs-comment"># Aside widget - Newest Comments</span><br><span class="hljs-attr">newest_comments:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">sort_order:</span> <span class="hljs-comment"># Don&#x27;t modify the setting unless you know how it works</span><br>  <span class="hljs-attr">limit:</span> <span class="hljs-number">6</span><br>  <span class="hljs-attr">storage:</span> <span class="hljs-number">10</span> <span class="hljs-comment"># unit: mins, save data to localStorage</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># You can only choose one, or neither</span><br>  <span class="hljs-attr">valine:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">github_issues:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">repo:</span><br>  <span class="hljs-attr">disqus:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">forum:</span><br>    <span class="hljs-attr">api_key:</span><br>  <span class="hljs-attr">twikoo:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">waline:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>  这里关闭了隐藏主页的按钮，修改了主页的个人信息部分的设置，并且关闭了公告和网站信卡片，并关闭了诸如访问人数、运行时间和最新评论的无关信息。</p><h4 id="设置数学支持"><a href="#设置数学支持" class="headerlink" title="设置数学支持"></a>设置数学支持</h4><p>数学公式支持依赖第三方库，因此在 <strong>working_dir</strong>工作目录下执行如下命令，安装该依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm uninstall hexo-renderer-marked --save<br>npm install hexo-renderer-kramed --save<br></code></pre></td></tr></table></figure></p><p>然后修改<strong>working_dir/themes/butterfly/_config.yml</strong>中的设置信息<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">mathjax:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># true 表示每一页都加载mathjax.js</span><br>  <span class="hljs-comment"># false 需要时加载，须在使用的Markdown Front-matter 加上 mathjax: true</span><br>  <span class="hljs-attr">per_page:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></p><p>最后，还需要修改 <strong>working_dir/_config.yml</strong>中的设置信息<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># MathJax</span><br><span class="hljs-attr">kramed:</span><br>  <span class="hljs-attr">gfm:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">pedantic:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">sanitize:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">tables:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">breaks:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">smartLists:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">smartypants:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></p><p>这里尝试使用如下语句测试其数学公式引用效果<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">这里引用变量<span class="hljs-code">`$a_i$`</span><br>$$\sigma = x<span class="hljs-emphasis">_1 + y_</span>1$$<br></code></pre></td></tr></table></figure></p><p>结果如下所示</p><blockquote><p>这里引用变量<script type="math/tex">a_i</script></p><script type="math/tex; mode=display">\sigma = x_1 + y_1</script></blockquote><h4 id="设置搜索系统"><a href="#设置搜索系统" class="headerlink" title="设置搜索系统"></a>设置搜索系统</h4><p>  本地搜索依赖第三方库，因此在<strong>working_dir</strong>工作目录下执行如下命令，安装该依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-generator-search --save<br></code></pre></td></tr></table></figure><p>  直接修改博客中的主题设置，打开本地搜索</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Local search</span><br><span class="hljs-attr">local_search:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h4 id="设置页面资源引用"><a href="#设置页面资源引用" class="headerlink" title="设置页面资源引用"></a>设置页面资源引用</h4><p>  修改博客中的相关设置，打开相对引用功能</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>  之后，我们在README中使用如下语句测试其图片引用和文件引用的效果<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![<span class="hljs-string">background</span>](<span class="hljs-link">background.jpg</span>)<br>[<span class="hljs-string">background</span>](<span class="hljs-link">background.jpg</span>)<br></code></pre></td></tr></table></figure></p><p>  则其会引用<strong>working_dir/source/_posts/<code>filename</code>/background.jpg</strong>的资源，效果如下图所示<br>  <img src="background.jpg" alt="效果图"><br>  <a href="background.jpg">文件链接</a></p><h4 id="设置页面美化"><a href="#设置页面美化" class="headerlink" title="设置页面美化"></a>设置页面美化</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Beautify (美化頁面顯示)</span><br><span class="hljs-attr">beautify:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">field:</span> <span class="hljs-string">site</span> <span class="hljs-comment"># site/post</span><br>  <span class="hljs-attr">title-prefix-icon:</span> <span class="hljs-string">&#x27;\f024&#x27;</span><br>  <span class="hljs-attr">title-prefix-icon-color:</span> <span class="hljs-string">&#x27;#F47466&#x27;</span><br></code></pre></td></tr></table></figure><p>  这里开启页面美化，自动更改<strong>ol</strong>、<strong>ul</strong>和<strong>h1</strong>-<strong>h5</strong>的样式</p><h4 id="设置页面字体"><a href="#设置页面字体" class="headerlink" title="设置页面字体"></a>设置页面字体</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Global font settings</span><br><span class="hljs-comment"># Don&#x27;t modify the following settings unless you know how they work (非必要不要修改)</span><br><span class="hljs-attr">font:</span><br>  <span class="hljs-attr">global-font-size:</span> <span class="hljs-string">13pt</span><br>  <span class="hljs-attr">code-font-size:</span> <span class="hljs-string">11pt</span><br>  <span class="hljs-attr">font-family:</span><br>  <span class="hljs-attr">code-font-family:</span><br></code></pre></td></tr></table></figure><p>  这里修改了全局页面字体的大小设置</p><h4 id="设置字数统计"><a href="#设置字数统计" class="headerlink" title="设置字数统计"></a>设置字数统计</h4><p>  文章字数统计依赖第三方库，因此在<strong>working_dir</strong>工作目录下执行如下命令，安装该依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-wordcount --save<br></code></pre></td></tr></table></figure><p>  直接修改博客中的主题设置，打开文章统计，并且关闭网站总字数统计即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># wordcount (字數統計)</span><br><span class="hljs-attr">wordcount:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">post_wordcount:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">min2read:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">total_wordcount:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h2 id="设置博客部署配置"><a href="#设置博客部署配置" class="headerlink" title="设置博客部署配置"></a>设置博客部署配置</h2><p>  博客部署同样依赖第三方库，因此在<strong>working_dir</strong>工作目录下执行如下命令，安装该依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>  然后，修改<strong>working_dir/_config.yml</strong>中的deploy配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;git&#x27;</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/JiaweiHawk/jiaweihawk.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">&quot;deploy&quot;</span><br></code></pre></td></tr></table></figure><p>  这里就完成了博客部署的设置，具体的部署操作在下面一起讲解</p><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><p>  根据最开始所说，仓库中会有两个分支：一个<strong>develop</strong>分支，用于存储博客环境的设置信息；另一个是<strong>deploy</strong>分支，其存储用于部署的博客前端资源。其中在设置github pages或其他服务器时，需要注意一下绑定的仓库分支即可</p><p>  对于更新或拉取博客设置信息，从而快速恢复博客的生成环境，在<strong>working_dir</strong>目录下执行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> -b develop git@github.com:JiaweiHawk/jiaweihawk.github.io.git<br>npm install<br></code></pre></td></tr></table></figure><p>  对于有新的博客要推送，或更新已有的博客到远程服务器上，则在<strong>working_dir</strong>目录下执行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo.cmd clean<br>hexo.cmd generate<br>hexo.cmd deploy<br></code></pre></td></tr></table></figure><p>  这里最后在特别说明一下：在更新博客到远程服务器之前，可以在本地进行查看，执行如下命令，即可在<strong>http:\/\/localhost:4000</strong>网址进行查看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo.cmd clean<br>hexo.cmd generate<br>hexo.cmd server<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 设置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设置 </tag>
            
            <tag> nodejs </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
